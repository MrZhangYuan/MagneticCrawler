<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:vs="clr-namespace:Microsoft.VisualStudio.PlatformUI.Shell.Controls;assembly=Microsoft.VisualStudio.Shell.ViewManager"
    xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.PlatformUI.Shell;assembly=Microsoft.VisualStudio.Shell.ViewManager">
    <Style TargetType="{x:Type vs:ViewHeader}">
        <Setter Property="UIElement.Focusable" Value="false" />
        <Setter Property="TextElement.Foreground" Value="{StaticResource ToolTitle_ForegroundBrush}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type vs:ViewHeader}">
                    <vs:DragUndockHeader
                        x:Name="DragHeader"
                        Focusable="false"
                        ViewElement="{TemplateBinding vs:ViewHeader.ContainingElement}"
                        ViewFrameworkElement="{TemplateBinding vs:ViewHeader.ContainingFrameworkElement}">
                        <Border
                            x:Name="Bd"
                            Height="28"
                            Padding="0,0,3,0"
                            Background="{StaticResource ToolTitle_BackgroundBrush}">
                            <DockPanel>
                                <Grid>
                                    <FrameworkElement.Resources>
                                        <Style TargetType="{x:Type vs:GlyphButton}">
                                            <Setter Property="vs:GlyphButton.GlyphForeground" Value="{StaticResource ToolTitleInactiveButton_ForegroundBrush}" />
                                            <Setter Property="Panel.Background" Value="{StaticResource ToolTitleInactiveButton_BackgroundBrush}" />
                                            <Setter Property="Border.BorderBrush" Value="{StaticResource ToolTitleInactiveButton_BorderBrush}" />
                                            <Setter Property="Border.BorderThickness" Value="1" />
                                            <Setter Property="vs:GlyphButton.HoverForeground" Value="{StaticResource ToolTitleInactiveButtonHover_ForegroundBrush}" />
                                            <Setter Property="vs:GlyphButton.HoverBackground" Value="{StaticResource ToolTitleInactiveButtonHover_BackgroundBrush}" />
                                            <Setter Property="vs:GlyphButton.HoverBorderBrush" Value="{StaticResource ToolTitleInactiveButtonHover_BorderBrush}" />
                                            <Setter Property="vs:GlyphButton.PressedForeground" Value="{StaticResource ToolTitleInactiveButtonPress_ForegroundBrush}" />
                                            <Setter Property="vs:GlyphButton.PressedBackground" Value="{StaticResource ToolTitleInactiveButtonPress_BackgroundBrush}" />
                                            <Setter Property="vs:GlyphButton.PressedBorderBrush" Value="{StaticResource ToolTitleInactiveButtonPress_BorderBrush}" />
                                            <Setter Property="vs:GlyphButton.HoverBorderThickness" Value="1" />
                                            <Setter Property="vs:GlyphButton.PressedBorderThickness" Value="1" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding View.IsActive, RelativeSource={RelativeSource AncestorType={x:Type vs:ViewHeader}}}" Value="True">
                                                    <Setter Property="vs:GlyphButton.GlyphForeground" Value="{StaticResource ToolTitleActiveButton_ForegroundBrush}" />
                                                    <Setter Property="Panel.Background" Value="{StaticResource ToolTitleActiveButton_BackgroundBrush}" />
                                                    <Setter Property="Border.BorderBrush" Value="{StaticResource ToolTitleActiveButton_BorderBrush}" />
                                                    <Setter Property="vs:GlyphButton.HoverForeground" Value="{StaticResource ToolTitleActiveButtonHover_ForegroundBrush}" />
                                                    <Setter Property="vs:GlyphButton.HoverBackground" Value="{StaticResource ToolTitleActiveButtonHover_BackgroundBrush}" />
                                                    <Setter Property="vs:GlyphButton.HoverBorderBrush" Value="{StaticResource ToolTitleActiveButtonHover_BorderBrush}" />
                                                    <Setter Property="vs:GlyphButton.PressedForeground" Value="{StaticResource ToolTitleActiveButtonPress_ForegroundBrush}" />
                                                    <Setter Property="vs:GlyphButton.PressedBackground" Value="{StaticResource ToolTitleActiveButtonPress_BackgroundBrush}" />
                                                    <Setter Property="vs:GlyphButton.PressedBorderBrush" Value="{StaticResource ToolTitleActiveButtonPress_BorderBrush}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </FrameworkElement.Resources>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter
                                        VerticalAlignment="Center"
                                        Content="{Binding View.Title, RelativeSource={RelativeSource TemplatedParent}}"
                                        ContentTemplate="{Binding View.TitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                        Focusable="false" />
                                    <vs:GlyphButton
                                        x:Name="AutoHideButton"
                                        Grid.Column="1"
                                        Width="15"
                                        Height="15"
                                        vs:ViewPresenter.CanActivateFromLeftClick="false"
                                        Command="{x:Static vs:ViewCommands.AutoHideViewCommand}"
                                        CommandParameter="{TemplateBinding vs:ViewHeader.ContainingElement}"
                                        ToolTip="SSSSSS"
                                        Visibility="Visible">
                                        <!--  Visibility="{Binding View.Model.CanAutoHide, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static convert:BooleanToVisibilityConverter.Instance}}">  -->
                                        <Path
                                            x:Name="AutoHideGlyph"
                                            Width="8"
                                            Height="11"
                                            Data="F1 M 3,11 L 3,7 0,7 0,6 1,6 1,1 1,0 6,0 6,1 6,6 7,6 7,7 4,7 4,11 3,11 M 2,1 L 2,6 4,6 4,1 2,1 Z"
                                            Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type vs:GlyphButton}}}"
                                            SnapsToDevicePixels="true"
                                            Stretch="Uniform" />
                                    </vs:GlyphButton>
                                    <vs:GlyphButton
                                        Grid.Column="2"
                                        Width="15"
                                        Height="15"
                                        vs:ViewPresenter.CanActivateFromLeftClick="false"
                                        Command="{x:Static vs:ViewCommands.HideViewCommand}"
                                        CommandParameter="{TemplateBinding vs:ViewHeader.View}"
                                        ToolTip="YYYYY"
                                        Visibility="Visible">
                                        <!--  Visibility="{Binding View.Model.CanHide, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static convert:BooleanToVisibilityConverter.Instance}}">  -->
                                        <Path
                                            Width="10"
                                            Height="8"
                                            Data="F1 M 0,0 L 2,0 5,3 8,0 10,0 6,4 10,8 8,8 5,5 2,8 0,8 4,4 0,0 Z"
                                            Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type vs:GlyphButton}}}"
                                            SnapsToDevicePixels="true"
                                            Stretch="Uniform" />
                                    </vs:GlyphButton>
                                </Grid>
                            </DockPanel>
                        </Border>
                    </vs:DragUndockHeader>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding View.IsActive, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="Bd" Property="Panel.Background" Value="{StaticResource ToolTitleActive_BackgroundBrush}" />
                            <Setter Property="TextElement.Foreground" Value="{StaticResource ToolTitleActive_ForegroundBrush}" />
                        </DataTrigger>
                        <Trigger Property="vs:AutoHideWindow.IsAutoHidden" Value="true">
                            <Setter TargetName="AutoHideGlyph" Property="Path.Data" Value="F1 M 0,3 L 4,3 4,0 5,0 5,1 10,1 11,1 11,6 10,6 5,6 5,7 4,7 4,4 0,4 0,3 M 10,2 L 5,2 5,4 10,4 10,2 Z" />
                            <Setter TargetName="AutoHideGlyph" Property="FrameworkElement.Width" Value="11" />
                            <Setter TargetName="AutoHideGlyph" Property="FrameworkElement.Height" Value="8" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="vs:FloatingWindow.IsFloating" Value="true" />
                                <Condition Property="vs:FloatingWindow.HasDocumentGroupContainer" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="AutoHideButton" Property="UIElement.Visibility" Value="Collapsed" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="vs:FloatingWindow.IsFloating" Value="true" />
                                <Condition Property="vs:FloatingWindow.OnScreenViewCardinality" Value="One" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="DragHeader" Property="vs:DragUndockHeader.IsWindowTitleBar" Value="true" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>