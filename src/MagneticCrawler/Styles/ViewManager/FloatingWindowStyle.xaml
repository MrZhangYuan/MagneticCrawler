<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:vs="clr-namespace:Microsoft.VisualStudio.PlatformUI.Shell.Controls;assembly=Microsoft.VisualStudio.Shell.ViewManager">
    <Style BasedOn="{StaticResource {x:Type vs:CustomChromeWindow}}" TargetType="{x:Type vs:FloatingWindow}">
        <Style.Resources>
            <vs:BooleanOrConverter x:Key="BooleanOrConverter" />
            <vs:HasMultipleOnScreenViewsConverter x:Key="HasMultipleOnScreenViewsConverter" />
        </Style.Resources>
        <Setter Property="TextElement.Foreground" Value="{StaticResource FloatingWindow_ForegroundBrush}" />
        <Setter Property="Panel.Background" Value="{StaticResource FloatingWindow_BackgroundBrush}" />
        <Setter Property="UIElement.Focusable" Value="false" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
        <Setter Property="InputMethod.IsInputMethodSuspended" Value="true" />
        <Setter Property="FrameworkElement.MinWidth" Value="50" />
        <Setter Property="FrameworkElement.MinHeight" Value="50" />
        <Setter Property="ActiveGlowColor" Value="{Binding Source={StaticResource FloatingWindow_ActiveBorderBrush}, Path=Color}" />
        <Setter Property="InactiveGlowColor" Value="{Binding Source={StaticResource FloatingWindow_InactiveBorderBrush}, Path=Color}" />
        <Setter Property="ContentControl.Content">
            <Setter.Value>
                <Binding />
            </Setter.Value>
        </Setter>
        <Setter Property="vs:FloatingWindow.ViewSite">
            <Setter.Value>
                <Binding />
            </Setter.Value>
        </Setter>
        <Setter Property="Window.ShowInTaskbar" Value="{Binding IsIndependent}" />
        <Setter Property="vs:FloatingWindow.OnScreenViewCardinality" Value="{Binding OnScreenViewCardinality}" />
        <Setter Property="vs:FloatingWindow.HasDocumentGroupContainer" Value="{Binding HasDocumentGroupContainer}" />
        <Setter Property="FrameworkElement.UseLayoutRounding" Value="true" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type vs:FloatingWindow}">
                    <vs:WindowContentPresenter Focusable="false">
                        <Grid Background="{TemplateBinding Panel.Background}">
                            <DockPanel x:Name="RootDockPanel">
                                <vs:DragUndockHeader
                                    x:Name="TitleBar"
                                    Height="35"
                                    DockPanel.Dock="Top"
                                    Focusable="false"
                                    ViewElement="{Binding Child}"
                                    Visibility="Collapsed" />
                                <AdornerDecorator>
                                    <ContentPresenter
                                        x:Name="ContentPresenter"
                                        ContentSource="Content"
                                        Focusable="false" />
                                </AdornerDecorator>
                            </DockPanel>
                            <vs:WindowResizeFrame x:Name="ResizeFrame" />
                        </Grid>
                    </vs:WindowContentPresenter>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="True">
                                    <Condition.Binding>
                                        <MultiBinding Converter="{StaticResource BooleanOrConverter}">
                                            <Binding Converter="{StaticResource HasMultipleOnScreenViewsConverter}" Path="OnScreenViewCardinality" />
                                            <Binding Path="HasDocumentGroupContainer" />
                                        </MultiBinding>
                                    </Condition.Binding>
                                </Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="TitleBar" Property="UIElement.Visibility" Value="Visible" />
                            <Setter TargetName="TitleBar" Property="vs:DragUndockHeader.IsWindowTitleBar" Value="true" />
                        </MultiDataTrigger>
                        <Trigger Property="Window.WindowState" Value="Maximized">
                            <Setter TargetName="ResizeFrame" Property="UIElement.Visibility" Value="Collapsed" />
                            <Setter TargetName="TitleBar" Property="vs:DragUndockHeader.IsDragEnabled" Value="false" />
                            <Setter TargetName="ContentPresenter" Property="FrameworkElement.Margin" Value="0" />
                            <!--<Setter TargetName="RootDockPanel" Property="FrameworkElement.Margin">
                                                                <Setter.Value>
                                                                        <Thickness
                                                                                Bottom="{x:Static SystemParameters.ResizeFrameHorizontalBorderHeight}"
                                                                                Left="{x:Static SystemParameters.ResizeFrameVerticalBorderWidth}"
                                                                                Right="{x:Static SystemParameters.ResizeFrameVerticalBorderWidth}"
                                                                                Top="{x:Static SystemParameters.ResizeFrameHorizontalBorderHeight}" />
                                                                </Setter.Value>
                                                        </Setter>-->
                            <Setter TargetName="TitleBar" Property="FrameworkElement.Margin" Value="0,0,0,4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>