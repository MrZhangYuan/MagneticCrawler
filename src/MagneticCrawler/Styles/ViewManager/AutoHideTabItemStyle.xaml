<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:vs="clr-namespace:Microsoft.VisualStudio.PlatformUI.Shell.Controls;assembly=Microsoft.VisualStudio.Shell.ViewManager"
    xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.PlatformUI.Shell;assembly=Microsoft.VisualStudio.Shell.ViewManager">
    <Style TargetType="{x:Type vs:AutoHideTabItem}">
        <Style.Resources>
            <DataTemplate DataType="{x:Type vsshell:View}">
                <ContentControl
                    x:Name="Presenter"
                    Content="{Binding Title}"
                    ContentTemplate="{Binding TabTitleTemplate}" />
                <DataTemplate.Triggers>
                    <DataTrigger Value="Vertical">
                        <DataTrigger.Binding>
                            <Binding ElementName="Presenter" Path="(vs:AutoHideChannelControl.Orientation)" />
                        </DataTrigger.Binding>
                        <Setter TargetName="Presenter" Property="FrameworkElement.LayoutTransform">
                            <Setter.Value>
                                <RotateTransform Angle="90" />
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
        </Style.Resources>
        <Setter Property="vs:MouseHover.MouseHoverDelay">
            <Setter.Value>
                <Binding Path="Preferences.AutoHideHoverDelay" Source="{x:Static vsshell:ViewManager.Instance}" />
            </Setter.Value>
        </Setter>
        <Setter Property="vs:MouseHover.IsMouseHoverTrackingEnabled">
            <Setter.Value>
                <Binding Path="Preferences.ShowAutoHiddenWindowsOnHover" Source="{x:Static vsshell:ViewManager.Instance}" />
            </Setter.Value>
        </Setter>
        <Setter Property="vs:AutoHideTabItem.IsAutoHideWindowShown" Value="{Binding IsSelected}" />
        <Setter Property="ButtonBase.Command" Value="{x:Static vs:ViewCommands.ShowAndActivateAutoHiddenView}" />
        <Setter Property="UIElement.SnapsToDevicePixels" Value="true" />
        <Setter Property="RenderOptions.EdgeMode" Value="Aliased" />
        <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality" />
        <Setter Property="ButtonBase.CommandParameter">
            <Setter.Value>
                <Binding />
            </Setter.Value>
        </Setter>
        <Setter Property="TextElement.Foreground" Value="{StaticResource AutoHideTab_ForegroundBrush}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type vs:AutoHideTabItem}">
                    <Border
                        x:Name="Border"
                        Background="{StaticResource AutoHideTab_BackgroundBrush}"
                        BorderBrush="{StaticResource AutoHideTab_BorderBrush}">
                        <ContentPresenter
                            x:Name="Content"
                            MinWidth="21"
                            ContentSource="Content"
                            Focusable="false" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="vs:AutoHideChannelControl.ChannelDock" Value="Left">
                            <Setter TargetName="Border" Property="Border.BorderThickness" Value="6,0,0,0" />
                            <Setter Property="FrameworkElement.Margin" Value="0,0,0,12" />
                            <!--<Setter Property="FrameworkElement.Margin" Value="-9,0,0,12" />-->
                            <Setter TargetName="Content" Property="FrameworkElement.Margin" Value="-5,1,2,0" />
                        </Trigger>
                        <Trigger Property="vs:AutoHideChannelControl.ChannelDock" Value="Right">
                            <Setter TargetName="Border" Property="Border.BorderThickness" Value="0,0,6,0" />
                            <Setter Property="FrameworkElement.Margin" Value="0,0,0,12" />
                            <!--<Setter Property="FrameworkElement.Margin" Value="0,0,-9,12" />-->
                            <Setter TargetName="Content" Property="FrameworkElement.Margin" Value="-3,1,1,0" />
                        </Trigger>
                        <Trigger Property="vs:AutoHideChannelControl.ChannelDock" Value="Top">
                            <Setter TargetName="Border" Property="Border.BorderThickness" Value="0,6,0,0" />
                            <Setter Property="FrameworkElement.Margin" Value="0,0,8,0" />
                            <Setter TargetName="Content" Property="FrameworkElement.Margin" Value="0,2,0,1" />
                        </Trigger>
                        <Trigger Property="vs:AutoHideChannelControl.ChannelDock" Value="Bottom">
                            <Setter TargetName="Border" Property="Border.BorderThickness" Value="0,0,0,6" />
                            <Setter Property="FrameworkElement.Margin" Value="0,0,8,0" />
                            <Setter TargetName="Content" Property="FrameworkElement.Margin" Value="0,1,0,2" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Border.BorderBrush" Value="{StaticResource AutoHideTabHover_BorderBrush}" />
                            <Setter TargetName="Border" Property="Panel.Background" Value="{StaticResource AutoHideTabHover_BackgroundBrush}" />
                            <Setter Property="TextElement.Foreground" Value="{StaticResource AutoHideTabHover_ForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
                            <Setter TargetName="Border" Property="Border.BorderBrush" Value="{StaticResource AutoHideTabHover_BorderBrush}" />
                            <Setter TargetName="Border" Property="Panel.Background" Value="{StaticResource AutoHideTabHover_BackgroundBrush}" />
                            <Setter Property="TextElement.Foreground" Value="{StaticResource AutoHideTabHover_ForegroundBrush}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected}" Value="True" />
                                <Condition Binding="{Binding IsActive}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="ButtonBase.Command" Value="{x:Static vs:ViewCommands.HideAutoHiddenView}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>