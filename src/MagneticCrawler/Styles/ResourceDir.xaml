<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:MagneticCrawler.Controls"
    xmlns:local="clr-namespace:MagneticCrawler"
    xmlns:platformui="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.14.0"
    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/MagneticCrawler;component/Styles/Brushes.xaml" />
        <ResourceDictionary Source="/MagneticCrawler;component/Styles/Controls.xaml" />
        <ResourceDictionary Source="/MagneticCrawler;component/Styles/ViewManagerStyles.xaml" />
        <ResourceDictionary Source="/MagneticCrawler;component/DataTemplates.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <!--<SolidColorBrush x:Key="VsBrush.VerticalResizeGripGradient" Color="Green" />-->
    <SolidColorBrush x:Key="{x:Static platformui:EnvironmentColors.VerticalResizeGripGradientBrushKey}" Color="{Binding Source={StaticResource MainWindow_BackgroundBrush}, Path=Color}" />
    <SolidColorBrush x:Key="{x:Static platformui:EnvironmentColors.HorizontalResizeGripBrushKey}" Color="{Binding Source={StaticResource MainWindow_BackgroundBrush}, Path=Color}" />
    <!--<SolidColorBrush x:Key="{x:Static platformui:EnvironmentColors.VerticalResizeGripGradientBrushKey}" Color="Transparent" />
                        <SolidColorBrush x:Key="{x:Static platformui:EnvironmentColors.HorizontalResizeGripBrushKey}" Color="Transparent" />-->

    <Style TargetType="{x:Type platformui:SplitterPanel}">
        <Setter Property="ShowResizePreview" Value="False" />
    </Style>


    <Style TargetType="{x:Type platformui:SplitterGrip}">
        <Setter x:Uid="Setter_4" Property="Control.Background" Value="Transparent" />
        <Setter x:Uid="Setter_1" Property="Control.Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_1" TargetType="{x:Type platformui:SplitterGrip}">
                    <Border
                        x:Name="Bd"
                        x:Uid="Bd"
                        Background="{TemplateBinding Control.Background}"
                        SnapsToDevicePixels="true">
                        <!--  重写该样式的目的是去除Width="2"  -->
                        <Border
                            x:Name="InnerBd"
                            x:Uid="InnerBd"
                            Background="{DynamicResource {x:Static platformui:EnvironmentColors.VerticalResizeGripGradientBrushKey}}"
                            Visibility="Collapsed" />
                        <!--<Border
                                                                        x:Name="InnerBd"
                                                                        x:Uid="InnerBd"
                                                                        Width="2"
                                                                        Background="{DynamicResource {x:Static platformui:EnvironmentColors.VerticalResizeGripGradientBrushKey}}"
                                                                        Visibility="Collapsed" />-->
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_1" Property="platformui:SplitterGrip.Orientation" Value="Horizontal">
                            <Setter x:Uid="Setter_2" Property="FrameworkElement.Cursor" Value="SizeWE" />
                            <Setter x:Uid="Setter_5" TargetName="InnerBd" Property="UIElement.Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger x:Uid="Trigger_2" Property="platformui:SplitterGrip.Orientation" Value="Vertical">
                            <Setter x:Uid="Setter_3" Property="FrameworkElement.Cursor" Value="SizeNS" />
                            <Setter x:Uid="Setter_6" Property="Control.Background" Value="{DynamicResource {x:Static platformui:EnvironmentColors.HorizontalResizeGripBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <system:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">10</system:Double>


    <ControlTemplate x:Key="MainSearchBtTemplate" TargetType="{x:Type Button}">
        <Border
            Background="#FF007ACC"
            BorderBrush="#FF007ACC"
            BorderThickness="1">
            <Grid>
                <Rectangle x:Name="mark" />
                <ContentPresenter
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    ContentSource="Content" />
            </Grid>

        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="mark" Property="Fill" Value="#20FFFFFF" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="mark" Property="Fill" Value="#20000000" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>



    <Style x:Key="SearchProgressBarStyle" TargetType="{x:Type ProgressBar}">
        <Setter Property="MinWidth" Value="2" />
        <Setter Property="MinHeight" Value="2" />
        <Setter Property="Background" Value="{StaticResource ProgressBar_BackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ProgressBarIndicator_ForegroundBrush}" />
        <Setter Property="UseLayoutRounding" Value="true" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid
                        x:Name="TemplateRoot"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="true">
                        <Rectangle x:Name="PART_Track" />
                        <Decorator x:Name="PART_Indicator" HorizontalAlignment="Left">
                            <Grid ClipToBounds="true">
                                <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" />
                                <Rectangle
                                    x:Name="Animation"
                                    Fill="{TemplateBinding Foreground}"
                                    RenderTransformOrigin="0.5,0.5">
                                    <Rectangle.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                            </Grid>
                        </Decorator>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.25" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                            <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5" />
                                            <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5" />
                                            <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5" />
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="TemplateRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="TemplateRoot" Property="RenderTransform">
                                <Setter.Value>
                                    <TranslateTransform X="-0.5" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter TargetName="Indicator" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxEditableTextBox2" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Padding" Value="3,0" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <TextBlock
                                x:Name="watermark"
                                Margin="10,0"
                                VerticalAlignment="Center"
                                FontSize="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(controls:ControlsHelper.WaterMarkFontSize)}"
                                Foreground="LightGray"
                                Text="生活不止眼前的苟且，还有违规的资源以及下不了的磁力..."
                                Visibility="Collapsed" />
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Margin="{TemplateBinding Padding}"
                                Background="Transparent"
                                Focusable="false"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter TargetName="watermark" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Static system:String.Empty}">
                            <Setter TargetName="watermark" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SearchControlItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="#FF505050" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border
                        x:Name="ListBoxItemRoot"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Background" Value="#FF007ACC" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Background" Value="#FF007ACC" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Background" Value="#90007ACC" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource ListItemDisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>