<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Presentation="clr-namespace:UltimatePresentation.Presentation">

    <Style x:Key="{x:Type Presentation:GlyphButton}" TargetType="{x:Type Presentation:GlyphButton}">
        <Style.Resources>
            <ResourceDictionary>
                <Presentation:BooleanOrConverter x:Key="BooleanOrConverter" />
            </ResourceDictionary>
        </Style.Resources>
        <!--<Setter Property="FrameworkElement.Width" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}" />-->
        <Setter Property="TextElement.Foreground" Value="{Binding Path=GlyphForeground, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Control.Background" Value="#00FFFFFF" />
        <Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
        <Setter Property="Control.BorderThickness" Value="0" />
        <Setter Property="UIElement.Focusable" Value="False" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Presentation:GlyphButton}">
                    <Border
                        Name="Border"
                        Background="{TemplateBinding Control.Background}"
                        BorderBrush="{TemplateBinding Control.BorderBrush}"
                        BorderThickness="{TemplateBinding Control.BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="UIElement.IsMouseOver" Value="True">
                                                        <Setter TargetName="Border" Property="Border.Background" Value="{Binding HoverBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                                                        <Setter TargetName="Border" Property="Border.BorderBrush" Value="{Binding HoverBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                                                        <Setter TargetName="Border" Property="Border.BorderThickness" Value="{Binding HoverBorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />
                                                        <Setter Property="TextElement.Foreground" Value="{Binding HoverForeground, RelativeSource={RelativeSource Self}}" />
                                                </Trigger>-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="True">
                                    <Condition.Binding>
                                        <MultiBinding Converter="{StaticResource BooleanOrConverter}">
                                            <Binding Path="IsPressed" RelativeSource="{RelativeSource Self}" />
                                            <Binding Path="IsChecked" RelativeSource="{RelativeSource Self}" />
                                        </MultiBinding>
                                    </Condition.Binding>
                                </Condition>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="Border" Property="Border.Background" Value="{Binding PressedBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                                <Setter TargetName="Border" Property="Border.BorderBrush" Value="{Binding PressedBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                                <Setter TargetName="Border" Property="Border.BorderThickness" Value="{Binding PressedBorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />
                                <Setter Property="TextElement.Foreground" Value="{Binding PressedForeground, RelativeSource={RelativeSource Self}}" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>